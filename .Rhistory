# Check for linearity with residuals vs fitted values
for (i in 1:length(predictors)) {
scatter(predictors[, i])
}
scatter <- function(input) {
x <- unlist(input)
y <- df_com$ViolentCrimesPerPop
fit <- lm(y ~ x, data = df_com)
plot_title <- paste("Scatter Plot of", names(input), "vs. ViolentCrimesPerPop")
plot(fit, 1, main = plot_title)
}
for (i in 1:length(predictors)) {
plot_name <- paste("Scatter Plot of", names(predictors)[i], "vs. ViolentCrimesPerPop")
plot_html <- paste0("<div class='plotdiv'>",
"<h3>", plot_name, "</h3>",
"<div>", scatter(predictors[, i]), "</div>",
"<button onclick='",
"var next_div = document.getElementById(\"plot_", i+1, "\");",
"if (next_div) {",
"next_div.style.display = \"block\";",
"document.getElementById(\"plot_", i, "\").style.display = \"none\"; };",
"'>Next Plot</button>",
"</div>")
cat(plot_html)
}
predictors <- df_com[,4:20]
# Title {.tabset .tabset-fade}
scatter <- function(input) {
x <- unlist(input)
y <- df_com$ViolentCrimesPerPop
fit <- lm(y ~ x, data = df_com)
plot_title <- paste("Scatter Plot of", names(input), "vs. ViolentCrimesPerPop")
assign(paste0("plot_var", names(input)), plot(fit, 1, main = plot_title))
}
# Check for linearity with residuals vs fitted values
for (i in 1:length(predictors)) {
scatter(predictors[, i])
}
scatter <- function(input) {
x <- unlist(input)
y <- df_com$ViolentCrimesPerPop
fit <- lm(y ~ x, data = df_com)
plot_title <- paste("Scatter Plot of", names(input), "vs. ViolentCrimesPerPop")
plot(fit, 1, main = plot_title)
}
for (i in 1:length(predictors)) {
if (i == 1) {
cat("\n\n")
} else {
cat("  \n\n")
}
plot_name <- paste("Scatter Plot of", names(predictors)[i], "vs. ViolentCrimesPerPop")
cat("###", plot_name, "\n\n")
scatter(predictors[, i])
cat("\n\n")
if (i < length(predictors)) {
cat("[Next Plot](#plot", i+1, ")")
}
}
predictors <- df_com[,4:20]
scatter <- function(input) {
x <- unlist(input)
y <- df_com$ViolentCrimesPerPop
fit <- lm(y ~ x, data = df_com)
plot_title <- paste("Scatter Plot of", names(input), "vs. ViolentCrimesPerPop")
plot(fit, 1, main = plot_title)
}
for (i in 1:length(predictors)) {
plot_name <- paste("Scatter Plot of", names(predictors)[i], "vs. ViolentCrimesPerPop")
cat("\n\n")
cat("#### ", plot_name, "\n\n")
scatter(predictors[, i])
if (i < length(predictors)) {
cat("\n\n[Next Plot](#plot", i+1, ")\n\n")
}
}
predictors <- df_com[,4:20]
scatter <- function(input) {
x <- unlist(input)
y <- df_com$ViolentCrimesPerPop
fit <- lm(y ~ x, data = df_com)
plot_title <- paste("Scatter Plot of", names(input), "vs. ViolentCrimesPerPop")
plot(fit, 1, main = plot_title)
}
for (i in 1:length(predictors)) {
plot_name <- paste("Scatter Plot of", names(predictors)[i], "vs. ViolentCrimesPerPop")
cat("\n\n")
cat("#### ", plot_name, "\n\n")
scatter(predictors[, i])
if (i < length(predictors)) {
cat("\n\n[Next Plot](#plot", i+1, ")\n\n")
}
}
install.packages("flexdashboard")
install.packages("viridis")
install.packages("marmap")
install.packages("mapproj")
ggplot(data = df_com, aes(x = ViolentCrimesPerPop)) + geom_density()
library(ggparcoord)
install.packages("ggparcoord")
library(ggparcoord)
install.packages("GGally")
library(GGally)
ggparcoord(my_data, columns = c("crime_rate","population", "racepctblack", "racePctWhite", "racePctAsian", "racePctHisp", "agePct12t21", "agePct12t29", "agePct16t24", "agePct65up", "medIncome", "PctPopUnderPov", "PctNotHSGrad", "PctUnemployed", "TotalPctDiv", "PctKidsBornNeverMar", "RentMedian", "PctForeignBorn")),
ggparcoord(df_com, columns = c("crime_rate","population", "racepctblack", "racePctWhite", "racePctAsian", "racePctHisp", "agePct12t21", "agePct12t29", "agePct16t24", "agePct65up", "medIncome", "PctPopUnderPov", "PctNotHSGrad", "PctUnemployed", "TotalPctDiv", "PctKidsBornNeverMar", "RentMedian", "PctForeignBorn")),
ggparcoord
ggparcoord(df_com, columns = c("crime_rate","population", "racepctblack", "racePctWhite", "racePctAsian", "racePctHisp", "agePct12t21", "agePct12t29", "agePct16t24", "agePct65up", "medIncome", "PctPopUnderPov", "PctNotHSGrad", "PctUnemployed", "TotalPctDiv", "PctKidsBornNeverMar", "RentMedian", "PctForeignBorn")), scale = "uniminmax")
ggparcoord(df_com, columns = c("crime_rate","population", "racepctblack", "racePctWhite", "racePctAsian", "racePctHisp", "agePct12t21", "agePct12t29", "agePct16t24", "agePct65up", "medIncome", "PctPopUnderPov", "PctNotHSGrad", "PctUnemployed", "TotalPctDiv", "PctKidsBornNeverMar", "RentMedian", "PctForeignBorn"), scale = "uniminmax")
ggparcoord(df_com, columns = c("crime_rate","population", "racepctblack", "racePctWhite", "racePctAsian", "racePctHisp", "agePct12t21", "agePct12t29", "agePct16t24", "agePct65up", "medIncome", "PctPopUnderPov", "PctNotHSGrad", "PctUnemployed", "TotalPctDiv", "PctKidsBornNeverMar", "RentMedian", "PctForeignBorn"), scale = "uniminmax")
ggparcoord(df_com, columns = c("crime_rate","population", "racepctblack", "racePctWhite", "racePctAsian", "racePctHisp", "agePct12t21", "agePct12t29", "agePct16t24", "agePct65up", "medIncome", "PctPopUnderPov", "PctNotHSGrad", "PctUnemployed", "TotalPctDiv", "Pct
names(df_com)
df_box <- df_com[, c("racepctblack", "racePctWhite", "racePctAsian", "racePctHisp", "ViolentCrimesPerPop")]
# Reshape the data for plotting
df_box_melt <- melt(df_box, id.vars = "ViolentCrimesPerPop", variable.name = "Race")
melt
install.packages("reshape2")
library(reshape2)
df_box <- df_com[, c("racepctblack", "racePctWhite", "racePctAsian", "racePctHisp", "ViolentCrimesPerPop")]
# Reshape the data for plotting
df_box_melt <- melt(df_box, id.vars = "ViolentCrimesPerPop", variable.name = "Race")
# Create the boxplot
ggplot(df_box_melt, aes(x = Race, y = value, fill = Race)) +
geom_boxplot() +
xlab("") +
ylab("Percentage") +
ggtitle("Boxplot of Race Percentages and Violent Crimes") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(df_box_melt, aes(x = Race, y = ViolentCrimesPerPop, fill = Race)) +
geom_boxplot() +
xlab("") +
ylab("Percentage") +
ggtitle("Boxplot of Race Percentages and Violent Crimes") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(df_box, aes(y = ViolentCrimesPerPop, fill = Race)) +
geom_boxplot() +
xlab("") + ggtitle("Boxplot of Race Percentages and Violent Crimes")
df_box <- df_com[, c("racepctblack", "racePctWhite", "racePctAsian", "racePctHisp", "ViolentCrimesPerPop")]
df_box_melt <- melt(df_box, id.vars = "ViolentCrimesPerPop", variable.name = "Race")
ggplot(df_box, aes(y = ViolentCrimesPerPop, fill = Race)) +
geom_boxplot() +
xlab("") + ggtitle("Boxplot of Race Percentages and Violent Crimes")
df_box_melt
head(df_box_melt)
ggplot(df_box, aes(x = value, y = ViolentCrimesPerPop, fill = Race)) +
geom_boxplot() +
xlab("") + ggtitle("Boxplot of Race Percentages and Violent Crimes")
ggplot(df_box, aes(x = value, y = ViolentCrimesPerPop, fill = Race)) +
geom_boxplot() +
xlab("") + ggtitle("Boxplot of Race Percentages and Violent Crimes") df_box <- df_com[, c("racepctblack", "racePctWhite", "racePctAsian", "racePctHisp", "ViolentCrimesPerPop")]
df_box_melt
head(df_box_melt)
df_box <- df_com[, c("racepctblack", "racePctWhite", "racePctAsian", "racePctHisp", "ViolentCrimesPerPop")]
df_box_melt <- melt(df_box, id.vars = "ViolentCrimesPerPop", variable.name = "Race")
ggplot(df_box_melt, aes(x = value, y = ViolentCrimesPerPop, fill = Race)) +
geom_boxplot()
ggplot(df_box_melt, aes(x = value, y = ViolentCrimesPerPop)) +
geom_boxplot() + facet_wrap(~ Race)
ggplot(df_box_melt, aes(x = value)) +
geom_boxplot() + facet_wrap(~ Race)
ggplot(df_box_melt, aes(y = value)) +
geom_boxplot() + facet_wrap(~ Race)
ggplot(df_box_melt, aes(y = value, fill = Race)) +
geom_boxplot()
ggplot(df_box_melt, aes(y = value, fill = Race)) +
geom_boxplot() + ylab("text")
install.packages("GGally")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(reshape2)
library(rmarkdown)
library(GGally)
df <- read_csv("crime.csv")
df_com <- select(df, communityName, state, ViolentCrimesPerPop, population, racepctblack, racePctWhite, racePctAsian, racePctHisp, agePct12t21, agePct12t29, agePct16t24, agePct65up, medIncome, PctPopUnderPov, PctNotHSGrad, PctUnemployed, TotalPctDiv, PctKidsBornNeverMar, RentMedian, PctForeignBorn )
df_state_dec <- df_com |> group_by(state) |> summarise(ViolentCrimesPerPop = mean(ViolentCrimesPerPop,na.rm = TRUE), population = sum(population), racepctblack = mean(racepctblack), racePctWhite = mean(racePctWhite), racePctAsian = mean(racePctAsian), racePctHisp = mean(racePctHisp), agePct12t21 = mean(agePct12t21), agePct12t29 = mean(agePct12t29), agePct16t24 = mean(agePct16t24), agePct65up = mean(agePct65up), medIncome = mean(medIncome), PctPopUnderPov = mean(PctPopUnderPov), PctNotHSGrad = mean(PctNotHSGrad), PctUnemployed = mean(PctUnemployed), TotalPctDiv = mean(TotalPctDiv), PctKidsBornNeverMar = mean(PctKidsBornNeverMar), RentMedian = mean(RentMedian), PctForeignBorn = mean(PctForeignBorn))
df_state <- df_state_dec %>%  mutate_if(is.numeric, round, digits=2)
paged_table(df_com)
predictors <- df_com[,4:20]
# Title {.tabset .tabset-fade}
scatter <- function(input) {
x <- unlist(input)
y <- df_com$ViolentCrimesPerPop
fit <- lm(y ~ x, data = df_com)
plot_title <- paste("Scatter Plot of", names(input), "vs. ViolentCrimesPerPop")
assign(paste0("plot_var", names(input)), plot(fit, 1, main = plot_title))
}
# Check for linearity with residuals vs fitted values
for (i in 1:length(predictors)) {
scatter(predictors[, i])
}
ggpairs(df_com, columns = 3:20)
install.packages("caret")
library(caret)
names(df_com)
df_box <- df_com[, c("racepctblack", "racePctWhite", "racePctAsian", "racePctHisp", "ViolentCrimesPerPop", "medIncome")]
df_box_melt <- melt(df_box, id.vars = "ViolentCrimesPerPop", variable.name = "Race")
head(df_box_melt)
df_box <- df_com[, c("racepctblack", "racePctWhite", "racePctAsian", "racePctHisp", "medIncome", "")]
df_box <- df_com[, c("racepctblack", "racePctWhite", "racePctAsian", "racePctHisp", "medIncome")]
df_box_melt <- melt(df_box, id.vars = "medIncome", variable.name = "Race",)
head(df_box_melt)
ggplot(df_box_melt, aes(y = value, fill = Race)) +
geom_boxplot() + ylab("Percentage of people of each race")
ggplot(df_box_melt, aes(y = medIncome, fill = Race)) +
geom_boxplot() + ylab("")
view(df_box_melt)
ggplot(df_box_melt, aes(y = medIncome, x = Race)) +
geom_boxplot() + ylab("")
ggplot(df_box_melt, aes(y = medIncome)) +
geom_boxplot() + ylab("") +facet_wrap(~ Race)
ggplot(df_box_melt, aes(x = Race y = medIncome)) +
ggplot(df_box_melt, aes(x = Race y = medIncome)) +
ggplot(df_box_melt, aes(x = Race, y = medIncome)) +
geom_boxplot() + ylab("")
ggplot(df_box, aes(x = racepctblack, y = medIncome)) +
geom_boxplot() + ylab("")
df_box_melt
df_box %>% gather(key = "Race", value = "Percentage", -medIncome)
df_box %>% gather(key = "Race", value = "Percentage", -medIncome)
View(df_box_melt)
ggplot(df_box, aes(x = Race, y = medIncome)) +
geom_boxplot() + ylab("")
df_box
test <- df_box %>% gather(key = "Race", value = "Percentage", -medIncome)
ggplot(test, aes(x = Race, y = medIncome)) +
geom_boxplot() + ylab("")
df_box <- df_com[, c("racepctblack", "racePctWhite", "racePctAsian", "racePctHisp", "medIncome")]
ggplot(df_box, aes(x = racepctblack, y = medIncome)) + geom_point()
ggplot(df_box, aes(x = racepctblack, y = medIncome)) + geom_point()
ggplot(df_box, aes(x = racePctWhite, y = medIncome)) + geom_point()
ggplot(df_box, aes(x = racePctAsian, y = medIncome)) + geom_point()
ggplot(df_box, aes(x = racePctHisp, y = medIncome)) + geom_point()
df_box_melt <- melt(df_box, id.vars = "medIncome", variable.name = "Race")
ggplot(df_box_melt,aes(x = Race, y= medIncome)) + geom_point() + facet_wrap(~ Race)
ggplot(df_box, aes(x = racePctHisp, y = medIncome)) + geom_point()
test
ggplot(test, aes(x = Percentage, y = medIncome)) +
geom_boxplot() + ylab("")
ggplot(test, aes(x = Percentage, y = medIncome, fill = Race)) +
geom_boxplot() + ylab("")
df_box_melt
ggplot(df_box_melt,aes(x = Value, y= medIncome)) + geom_point() + facet_wrap(~ Race)
ggplot(df_box_melt,aes(x = Value, y= medIncome)) + geom_point() + facet_wrap(~ Race)
head(df_box_melt)
ggplot(df_box_melt,aes(x = value, y= medIncome)) + geom_point() + facet_wrap(~ Race)
geom_boxplot() + ylab("")
ggplot(test, aes(x = Percentage, y = medIncome)) + facet_wrap(~ Race)
geom_boxplot() + ylab("")
ggplot(test, aes(x = Percentage, y = medIncome)) + facet_wrap(~ Race) + geom_boxplot() + ylab("")
ggplot(df_box_melt,aes(x = value, y= medIncome)) + geom_point() + geom_smoot() + facet_wrap(~ Race)
ggplot(df_box_melt,aes(x = value, y= medIncome)) + geom_point() + geom_smooth() + facet_wrap(~ Race)
ggplot(df_box_melt,aes(x = value, y= medIncome)) + geom_density() + facet_wrap(~ Race)
ggplot(df_box_melt,aes(x = value, y= medIncome)) + geom_density(aes(color = Race)) + facet_wrap(~ Race)
ggplot(df_box_melt,aes(x = value)) + geom_density() + facet_wrap(~ Race)
ggplot(data = df_com, aes(x = ViolentCrimesPerPop)) + geom_density() + scale_y_continuous(labels = scales::percent_format()) + labs(title = "Density graph of ViolentCrimesPerPop in percentages across communities")
ggplot(data = df_com, aes(x = ViolentCrimesPerPop, color = state)) + geom_density() + scale_y_continuous(labels = scales::percent_format()) + labs(title = "Density graph of ViolentCrimesPerPop in percentages across communities")
ggplot(data = df_com, aes(x = ViolentCrimesPerPop)) + geom_density() + scale_y_continuous(labels = scales::percent_format()) + labs(title = "Density graph of ViolentCrimesPerPop in percentages across communities")
ggplot(df_box_melt,aes(x = value, y = medIncome)) + geom_point() + facet_grid(~ Race)
ggplot(df_box_melt,aes(x = value, y = medIncome)) + geom_point() + facet_wrap(~ Race)
view(df_com)
ggplot(df_box_melt,aes(x = value, y = medIncome)) + geom_point() + facet_wrap(~ Race) + labs(ylab = "xd")
ggplot(df_box_melt,aes(x = value, y = medIncome)) + geom_point() + facet_wrap(~ Race) + labs(xlab = "sss")
ggplot(df_box_melt,aes(x = value, y = medIncome)) + geom_point() + facet_wrap(~ Race) + labs(title = "sss")
ggplot(df_box_melt,aes(x = value, y = medIncome)) + geom_point() + facet_wrap(~ Race) + labs(title = "sss", xlab("s"))
ggplot(df_box_melt,aes(x = value, y = medIncome)) + geom_point() + facet_wrap(~ Race) + labs(title = "sss", xlab("s")) + xlab("Dose (mg)")
ggplot(df_box_melt,aes(x = value, y = medIncome)) + geom_point() + facet_wrap(~ Race) + labs(title = "Median income vs Race Percentage") + xlab("Race Percentage")
ggplot(df_box_melt,aes(x = value, y = medIncome)) + geom_point() + facet_wrap(~ Race) + labs(title = "Median income vs Race Percentage") + xlab("Race Percentage") + ylab("Median Income")
names(df_com)
ggplot(df_box_melt2,aes(x = value, y = ViolentCrimesPerPop)) + geom_point() + facet_wrap(~ Race)
df_box2 <- df_com[, c("racepctblack", "racePctWhite", "racePctAsian", "racePctHisp", "ViolentCrimesPerPop")]
df_box_melt2 <- melt(df_box2, id.vars = "ViolentCrimesPerPop", variable.name = "Race")
ggplot(df_box_melt2,aes(x = value, y = ViolentCrimesPerPop)) + geom_point() + facet_wrap(~ Race
ggplot(df_box_melt2,aes(x = value, y = ViolentCrimesPerPop)) + geom_point() + facet_wrap(~ Race)
ggplot(df_box_melt2,aes(x = value, y = ViolentCrimesPerPop)) + geom_point() + facet_wrap(~ Race)
ggplot(df_box_melt2,aes(x = value, y = ViolentCrimesPerPop)) + geom_point()
ggplot(df_box_melt2,aes(x = value, y = ViolentCrimesPerPop)) + geom_point() + facet_wrap(~ Race)
+ labs(title = "Median income vs Race Percentage") + xlab("Race Percentage") + ylab("Median Income")
ggplot(df_box_melt2,aes(x = value, y = ViolentCrimesPerPop)) + geom_point() + facet_wrap(~ Race)
ggplot(df_box_melt,aes(x = value, y = medIncome)) + geom_point() + facet_wrap(~ Race) + labs(title = "Median income vs Race Percentage") + xlab("Race Percentage") + ylab("Median Income")
ggplot(df_state,aes(x = PctKidsBornNeverMar , y= ViolentCrimesPerPop, label = state)) + geom_point(aes(color = state)) + geom_text() + theme(legend.position = "none")
view(df_box_melt)
ggplot(df_com, aes(x = ViolentCrimesPerPop)) +
geom_histogram(binwidth = 1, color = "white", fill = "blue") +
labs(x = "Violent Crimes per 100,000 People", y = "Frequency") +
theme_classic()
ggplot(df_com, aes(x = ViolentCrimesPerPop)) +
geom_histogram(binwidth = 1, fill = "blue") +
labs(x = "Violent Crimes per 100,000 People", y = "Frequency") +
theme_classic()
ggplot(df_com, aes(x = ViolentCrimesPerPop)) +
geom_histogram(binwidth = 2, fill = "blue") +
labs(x = "Violent Crimes per 100,000 People", y = "Frequency") +
theme_classic()
ggplot(df_com, aes(x = ViolentCrimesPerPop)) +
geom_histogram(binwidth = 10, fill = "blue") +
labs(x = "Violent Crimes per 100,000 People", y = "Frequency") +
theme_classic()
ggplot(df_com, aes(x = ViolentCrimesPerPop)) +
geom_histogram(binwidth = 15, fill = "blue") +
labs(x = "Violent Crimes per 100,000 People", y = "Frequency") +
theme_classic()
ggplot(df_com, aes(x = ViolentCrimesPerPop)) +
geom_histogram(binwidth = 20, fill = "blue") +
labs(x = "Violent Crimes per 100,000 People", y = "Frequency") +
theme_classic()
ggplot(df_com, aes(x = ViolentCrimesPerPop)) +
geom_histogram(binwidth = 30, fill = "blue") +
labs(x = "Violent Crimes per 100,000 People", y = "Frequency") +
theme_classic()
ggplot(df_com, aes(x = ViolentCrimesPerPop)) +
geom_histogram(binwidth = 50, fill = "blue") +
labs(x = "Violent Crimes per 100,000 People", y = "Frequency") +
theme_classic()
ggplot(df_com, aes(x = ViolentCrimesPerPop)) +
geom_histogram(binwidth = 40, fill = "blue") +
labs(x = "Violent Crimes per 100,000 People", y = "Frequency") +
theme_classic()
ggplot(df_com, aes(x = ViolentCrimesPerPop)) +
geom_histogram(binwidth = 40,color = "white", fill = "blue") +
labs(x = "Violent Crimes per 100,000 People", y = "Frequency") +
theme_classic()
ggplot(df_com, aes(x = ViolentCrimesPerPop)) +
geom_histogram(binwidth = 40,color = "white", fill = "blue") +
labs(x = "Violent Crimes per 100,000 People", y = "Frequency")
ggplot(df_com, aes(x = ViolentCrimesPerPop)) +
geom_histogram(binwidth = 40,color = "white", fill = "blue") +
labs(x = "Violent Crimes per 100,000 People", y = "Frequency", title = "S")
ggplot(df_com, aes(x = ViolentCrimesPerPop)) +
geom_histogram(binwidth = 40,color = "white", fill = "blue") +
labs(x = "Violent Crimes per 100,000 People", y = "Frequency", title = "Frequency of Crime cases for all communities")
ggplot(data = df_com, aes(x = ViolentCrimesPerPop)) + geom_density() + scale_y_continuous(labels = scales::percent_format()) + labs(title = "Density graph of ViolentCrimesPerPop in percentages across communities")
ggplot(data = df_com, aes(x = ViolentCrimesPerPop)) + geom_density() + scale_y_continuous(labels = scales::percent_format()) + labs(title = "Density graph of ViolentCrimesPerPop in percentages across communities")
ggplot(df_com, aes(x = ViolentCrimesPerPop)) +
geom_histogram(binwidth = 40,color = "white", fill = "blue") +
labs(x = "Violent Crimes per 100,000 People", y = "Frequency", title = "Frequency of Crime cases for all communities")
corrplot
library(corrplot)
install.packages("corrplot ")
library(corrplot)
library(corrplot)
library(corrplot)
install.packages("corrplot")
library(corrplot)
R = select(df_com, -c(state,communityName)) %>%
cor(use = "pairwise.complete.obs")
corrplot(R,method="color"), addCoef.col = "grey",
R = select(df_com, -c(state,communityName)) %>%
cor(use = "pairwise.complete.obs")
corrplot(R,method="color", addCoef.col = "grey",
order = "AOE", number.cex = 0.5, tl.cex = 0.4, tl.col = "black")
corrplot(R,method="color",
order = "AOE", number.cex = 0.5, tl.cex = 0.4, tl.col = "black")
corrplot(R,method="color", addCoef.col = "black",
order = "AOE", number.cex = 0.5, tl.cex = 0.4, tl.col = "black")
corrplot(R,method="color", addCoef.col = "black",
order = "AOE", number.cex = 0.5, tl.cex = 0.4, tl.col = "black", title = "a")
corrplot(R,method="color", addCoef.col = "black",
order = "AOE", number.cex = 0.5, tl.cex = 0.4, tl.col = "black", title = "HELLO")
R = select(df_com, -c(state,communityName)) %>%
cor(use = "pairwise.complete.obs")
corrplot(R,method="color", addCoef.col = "black",
order = "AOE", number.cex = 0.5, tl.cex = 0.4, tl.col = "black")
plotedit on
par(mar = c(4, 4, 4, 4))
R = select(df_com, -c(state,communityName)) %>%
cor(use = "pairwise.complete.obs")
corrplot(R,method="color", addCoef.col = "black",
order = "AOE", number.cex = 0.5, tl.cex = 0.4, tl.col = "black")
par(mar = c(10, 10, 10, 10))
R = select(df_com, -c(state,communityName)) %>%
cor(use = "pairwise.complete.obs")
corrplot(R,method="color", addCoef.col = "black",
order = "AOE", number.cex = 0.5, tl.cex = 0.4, tl.col = "black")
par(mar = c(, 4, 4, 4))
par(mar = c(4, 4, 4, 4))
R = select(df_com, -c(state,communityName)) %>%
cor(use = "pairwise.complete.obs")
corrplot(R,method="color", addCoef.col = "black",
order = "AOE", number.cex = 0.5, tl.cex = 0.4, tl.col = "black")
par(mar = c(4, 10, 4, 10))
R = select(df_com, -c(state,communityName)) %>%
cor(use = "pairwise.complete.obs")
corrplot(R,method="color", addCoef.col = "black",
order = "AOE", number.cex = 0.5, tl.cex = 0.4, tl.col = "black")
R = select(df_com, -c(state,communityName)) %>%
cor(use = "pairwise.complete.obs")
par(mar = c(1, 1, 1, 5))
corrplot(R,method="color", addCoef.col = "black",
order = "AOE", number.cex = 0.5, tl.cex = 0.4, tl.col = "black")
par(mar = c(1, 10, 1, 5))
par(mar = c(1, 10, 1, 5))
corrplot(R,method="color", addCoef.col = "black",
order = "AOE", number.cex = 0.5, tl.cex = 0.4, tl.col = "black")
par(mar = c(1, 10, 1, 5) + 10)
par(mar = c(4, 10, 4, 10))
R = select(df_com, -c(state,communityName)) %>%
cor(use = "pairwise.complete.obs")
par(mar = c(1, 10, 1, 5) + 10)
corrplot(R,method="color", addCoef.col = "black",
order = "AOE", number.cex = 0.5, tl.cex = 0.4, tl.col = "black")
corrplot(R,method="color", addCoef.col = "black",
order = "AOE", number.cex = 0.5, tl.cex = 0.7, tl.col = "black")
corrplot(R,method="color", addCoef.col = "black",
order = "AOE", number.cex = 0.5, tl.cex = 0.5, tl.col = "black")
corrplot(R,method="color", addCoef.col = "black",
order = "AOE", number.cex = 0.5, tl.cex = 0.55, tl.col = "black")
corrplot(R,method="color", addCoef.col = "black",
order = "AOE", number.cex = 0.5, tl.cex = 0.6, tl.col = "black")
ggplot(df_com, aes(x = ViolentCrimesPerPop)) +
geom_histogram(binwidth = 40,color = "white", fill = "grey") +
labs(x = "Violent Crimes per 100,000 People", y = "Frequency", title = "Frequency of Crime cases for all communities")
ggplot(df_com, aes(x = ViolentCrimesPerPop)) +
geom_histogram(binwidth = 40,color = "white", fill = "red") +
labs(x = "Violent Crimes per 100,000 People", y = "Frequency", title = "Frequency of Crime cases for all communities")
ggplot(df_com, aes(x = ViolentCrimesPerPop)) +
geom_histogram(binwidth = 40,color = "white", fill = "green") +
labs(x = "Violent Crimes per 100,000 People", y = "Frequency", title = "Frequency of Crime cases for all communities")
ggplot(df_com, aes(x = ViolentCrimesPerPop)) +
geom_histogram(binwidth = 40,color = "white", fill = "blue") +
labs(x = "Violent Crimes per 100,000 People", y = "Frequency", title = "Frequency of Crime cases for all communities")
ggplot(df_com, aes(x = ViolentCrimesPerPop)) +
geom_histogram(binwidth = 40,color = "white", fill = "blue") +
labs(x = "Violent Crimes per 100,000 People", y = "Frequency", title = "Frequency of Crime cases for all communities") +  theme_classic()
ggplot(df_com, aes(x = ViolentCrimesPerPop)) +
geom_histogram(binwidth = 40,color = "white", fill = "blue") +
labs(x = "Violent Crimes per 100,000 People", y = "Frequency", title = "Frequency of Crime cases for all communities")
ggplot(df_box_melt2,aes(x = value, y = ViolentCrimesPerPop, color = Race)) + geom_point()
ggplot(df_box_melt2,aes(x = value, y = ViolentCrimesPerPop)) + geom_point() + facet_wrap(~ Race)
+ labs(title = "Median income vs Race Percentage") + xlab("Race Percentage") + ylab("Median Income")
ggplot(df_box_melt2,aes(x = value, y = ViolentCrimesPerPop)) + geom_point() + facet_wrap(~ Race)
+ labs(title = "Median income vs Race Percentage") + xlab("Race Percentage") + ylab("Median Income")
ggplot(df_box_melt2,aes(x = value, y = ViolentCrimesPerPop)) + geom_point() + facet_wrap(~ Race) + labs(title = "Median income vs Race Percentage") + xlab("Race Percentage") + ylab("Median Income")
ggplot(df_box_melt2,aes(x = value, y = ViolentCrimesPerPop, color = Race)) + geom_point()
ggplot(df_box_melt2,aes(x = value, y = ViolentCrimesPerPop, color = Race)) + geom_point() + facet_wrap(~ Race) + labs(title = "Median income vs Race Percentage") + xlab("Race Percentage") + ylab("Median Income")
ggplot(df_com, aes(x = medIncome, y = racepctblack, color = racepctblack)) +
geom_point() +
labs(x = "Median Income", y = "% Black Residents") +
scale_color_gradient(low = "blue", high = "red")
ggplot(df_com, aes(x = medIncome, y = racepctblack, color = racepctblack)) +
geom_point() +
labs(x = "Median Income", y = "% Black Residents")
ggplot(df_com, aes(x = medIncome, y = racepctblack, color = racepctblack)) +
geom_point() +
labs(x = "Median Income", y = "% Black Residents")
ggplot(df_com, aes(x =racepctblack , y =medIncome , color = racepctblack)) +
geom_point() +
labs(x = "Median Income", y = "% Black Residents")
ggplot(df_com, aes(x = medIncome, y = racepctblack , color = racepctblack)) +
geom_point() +
labs(x = "Median Income", y = "% Black Residents")
ggplot(df_box_melt2,aes(x = value, y = ViolentCrimesPerPop, color = Race)) + geom_point() + facet_wrap(~ Race) + labs(title = "Median income vs Race Percentage") + xlab("Race Percentage") + ylab("Median Income")
ggplot(df_com, aes(x = ViolentCrimesPerPop, y = racepctblack , color = racepctblack)) +
geom_point() +
labs(x = "Median Income", y = "% Black Residents")
ggplot(df_com, aes(x = ViolentCrimesPerPop, y = racePctWhite , color = racepctblack)) +
geom_point() +
labs(x = "ViolentCrimesPerPop", y = "% White Residents")
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + facet_wrap(~ Race) + labs(title = "Median income vs Race Percentage") + xlab("Race Percentage") + ylab("Median Income")
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage ")
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(method = "lm") facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage")
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(method = "lm") +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage")
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(method = "lm", color = "black") +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage")
ggplot(df_box_melt2,aes(x = value, y = ViolentCrimesPerPop, color = Race)) + geom_point()
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(method = "lm", color = "black") +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage")
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(color = "black") +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage") +
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(color = "black") +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage")
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth() +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage")
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(aes(color = black)) +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage")
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(aes(color = "black")) +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage")
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(aes(color = "red")) +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage")
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(aes(color = "black")) +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage")
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(aes(color = "grey")) +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage")
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(aes(color = "black")) +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage")
?geom_smooth
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(method = "glm", family = "poisson", se = FALSE) +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage")
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(method = "glm", family = "quasipoisson", se = FALSE) +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage")
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(method = "glm", family = "quasipoisson", se = FALSE) +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage") +   geom_vline(xintercept = 3.5, color = "red")
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(method = "glm", family = "quasipoisson", se = FALSE) +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage") +   geom_vline(xintercept = 2500, color = "red")
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(method = "glm", family = "quasipoisson", se = FALSE) +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage") +   geom_vline(xintercept = 2500, color = "red", alpha = 0.1)
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(method = "glm", family = "quasipoisson", se = FALSE) +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage") +   geom_vline(xintercept = 2500, color = "red", alpha = 0.6)
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(method = "glm", family = "quasipoisson", se = FALSE) +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage") +   geom_vline(xintercept = 2500, color = "grey", alpha = 0.4)
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(method = "glm", family = "quasipoisson", se = FALSE) +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage") +   geom_vline(xintercept = 2500, color = "black", alpha = 0.4)
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(method = "glm", family = "quasipoisson", se = FALSE) +  facet_grid(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage") +   geom_vline(xintercept = 2500, color = "black", alpha = 0.4)
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(method = "glm", family = "quasipoisson", se = FALSE) +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage") +   geom_vline(xintercept = 2500, color = "black", alpha = 0.4)
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(method = "lm") +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage") +   geom_vline(xintercept = 2500, color = "black", alpha = 0.4)
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(method = "lm") +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage") +   geom_vline(xintercept = 2500, color = "black", alpha = 0.4) + theme(legend.position = "none")
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(method = "lm", color = black) +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage") +   geom_vline(xintercept = 2500, color = "black", alpha = 0.4) + theme(legend.position = "none")
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(method = "lm", color = "black") +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage") +   geom_vline(xintercept = 2500, color = "black", alpha = 0.4) + theme(legend.position = "none")
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(method = "lm", color = "black", size = 0.3) +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage") +   geom_vline(xintercept = 2500, color = "black", alpha = 0.4) + theme(legend.position = "none")
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(method = "lm", color = "black", size = 0.5) +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage") +   geom_vline(xintercept = 2500, color = "black", alpha = 0.4) + theme(legend.position = "none")
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(method = "lm", color = "black", size = 0.5, alpha = 0.5) +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage") +   geom_vline(xintercept = 2500, color = "black", alpha = 0.4) + theme(legend.position = "none")
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(method = "lm", color = "black", size = 0.5, alpha = 0.5) +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage") +   geom_vline(xintercept = 2500, color = "black", alpha = 0.4)
names(df_com)
ggplot(df_com, aes(x =ViolentCrimesPerPop, y = PctPopUnderPov)) + geom_point() + geom_smooth()
scatter(predictors[,"PctPopUnderPov"])
ggplot(df_com, aes(x =ViolentCrimesPerPop, y = PctPopUnderPov)) + geom_point() + geom_smooth() + title("Percentage population under Poverty vs Violent Crimes per 100K")
ggplot(df_com, aes(x =ViolentCrimesPerPop, y = PctPopUnderPov)) + geom_point() + geom_smooth() + title("Percentage population under Poverty vs Violent Crimes per 100K")
ggplot(df_com, aes(x =ViolentCrimesPerPop, y = PctPopUnderPov)) + geom_point() + geom_smooth() + labs(title = "Percentage population under Poverty vs Violent Crimes per 100K")
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(method = "lm", color = "black", size = 0.5, alpha = 0.5) +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage") +   geom_vline(xintercept = 2500, color = "black", alpha = 0.4)
ggplot(df_box_melt2,aes(x = ViolentCrimesPerPop , y = value, color = Race)) + geom_point() + geom_smooth(method = "lm", color = "black", size = 0.5, alpha = 0.5) +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + xlab("ViolentCrimesPerPop") + ylab("Race Percentage") +   geom_vline(xintercept = 2500, color = "black", alpha = 0.4) + theme(legend.position = "none")
names(df_com)
ggplot(df_com, aes(x =ViolentCrimesPerPop, y = PctKidsBornNeverMar)) + geom_point() + geom_smooth() + labs(title = "Percentage of kids born to never married parents vs Violent Crimes per 100K")
scatter(predictors[,"PctKidsBornNeverMar"])
ggplot(df_com, aes(x =ViolentCrimesPerPop, y = medIncome)) + geom_point() + geom_smooth() + labs(title = "Median Income vs Violent Crimes per 100K")
ggplot(df_com, aes(x =ViolentCrimesPerPop, y = medIncome)) + geom_point() + geom_smooth() + labs(title = "Median Income vs Violent Crimes per 100K")
scatter(predictors[,""])
scatter(predictors[,"medIncome"])
ggplot(df_box_melt2,aes(x =value  , y ViolentCrimesPerPop= , color = Race)) + geom_point() + geom_smooth(method = "lm", color = "black", size = 0.5, alpha = 0.5) +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + ylab("ViolentCrimesPerPop") + xlab("Race Percentage") + theme(legend.position = "none")
ggplot(df_box_melt2,aes(x =value  , y = ViolentCrimesPerPop , color = Race)) + geom_point() + geom_smooth(method = "lm", color = "black", size = 0.5, alpha = 0.5) +  facet_wrap(~ Race) + labs(title = "ViolentCrimesPerPop vs Race Percentage") + ylab("ViolentCrimesPerPop") + xlab("Race Percentage") + theme(legend.position = "none")
#Graph
ggplot(df_com, aes(y =ViolentCrimesPerPop, x = medIncome)) + geom_point() + geom_smooth() + labs(title = "Median Income vs Violent Crimes per 100K")
#Graph
ggplot(df_com, aes(y =ViolentCrimesPerPop, x = medIncome)) + geom_point() + geom_smooth() + labs(title = "Median Income vs Violent Crimes per 100K people")
