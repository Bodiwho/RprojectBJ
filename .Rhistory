scatter(predictors[,6])
scatter(predictors[,7])
scatter(predictors[,8])
names(predictors[,8])
scatter = function(input){
x = unlist(input)
y = df_com$ViolentCrimesPerPop
fm <- formula()
fit <- lm(y ~ x , data = df_com)
plot(fit,1, title(names(input))
}
scatter = function(input){
x = unlist(input)
y = df_com$ViolentCrimesPerPop
fm <- formula()
fit <- lm(y ~ x , data = df_com)
plot(fit,1, title(names(input)))
}
scatter(predictors[,8])
a <- 0
for(i in length(predictors)){
a[1] <- ascatter(predictors[,i])
}
for(i in length(predictors)){
a[1] <- scatter(predictors[,i])
}
for(i in length(predictors)){
a[i] <- scatter(predictors[,i])
}
a
a <- sapply(scatter)
assign(paste('a', i, sep=''), 'hello')
a17
assign(paste('a', i, sep=''), 'hello')
assign(paste('a', i, sep=''), 'hello')
for(i in 1:length(predictors)){
a[i] <- scatter(predictors[,i])
}
assign(paste('a', i, sep=''), 'hello')
for(i in 1:length(predictors)){
assign(paste('a', i, sep=''), '0')
a[i] <- scatter(predictors[,i])
}
for(i in 1:length(predictors)){
assign(paste('a', i, sep=''), '0') <- scatter(predictors[,i])
}
for(i in 1:length(predictors)){
assign(paste('a', i, sep=''), '0') <- scatter(predictors[,i])
}
i
assign(paste('a', i, sep=''), '0') <- plot(fit,1)
a
class(A)
class(a)
for(i in 1:length(predictors)){
as.character(assign(paste('a', i, sep=''), '0')) <- scatter(predictors[,i])
}
as.character(assign(paste('a', i, sep=''), '0')) <- "a"
as.character(assign(paste('a', i, sep=''), '0'))
as.character(assign(paste('a', i, sep=''), '0'))
for(i in 1:length(predictors)){
assign(paste('a', i, sep=''), '.') <- scatter(predictors[,i])
}
rm(a)
rm(a1)
for(i in 1:length(predictors)){
assign(paste('a', i, sep=''), '.') <- scatter(predictors[,i])
}
results <- list()
for (i in 1:length(predictors)) {
# apply your scatter function to the predictor variable
result <- scatter(predictors[, i])
# assign the result to a variable with a dynamic name
results[[paste0("a", i)]] <- result
}
a1
aresults
results
results[[a1]]
results
result
results
results[[1]]
for (i in 1:length(predictors)) {
# apply your scatter function to the predictor variable
result <- scatter(predictors[, i])
# assign the result to a variable with a dynamic name
results[[paste0("a", i)]] <- result
}
results
for (i in 1:length(predictors)) {
# apply your scatter function to the predictor variable
result <- scatter(predictors[, i])
# assign the result to a variable with a dynamic name
paste0("a", i) <- result
}
results <- list()
for (i in 1:length(predictors)) {
# apply your scatter function to the predictor variable
result <- scatter(predictors[, i])
# assign the result to a variable with a dynamic name
results[[paste0("a", i)]] <- result
}
results <- list()
for (i in 1:length(predictors)) {
# apply your scatter function to the predictor variable
result <- scatter(predictors[, i])
# assign the result to a variable with a dynamic name
assign(paste0("a", i), result)
# add the variable name to the results list
results[[i]] <- paste0("a", i)
}
a1
scatter = function(input){
x = unlist(input)
y = df_com$ViolentCrimesPerPop
fm <- formula()
fit <- lm(y ~ x , data = df_com)
save <- plot(fit,1, title(names(input)))
}
scatter(predictors[,1])
save
scatter = function(input){
x = unlist(input)
y = df_com$ViolentCrimesPerPop
fm <- formula()
fit <- lm(y ~ x , data = df_com)
sav <- plot(fit,1, title(names(input)))
}
scatter(predictors[,1])
sav
scatter <- function(input) {
x <- unlist(input)
y <- df_com$ViolentCrimesPerPop
fit <- lm(y ~ x, data = df_com)
plot_title <- paste("Scatter Plot of", names(input), "vs. ViolentCrimesPerPop")
# save the plot in a variable with a dynamic name
assign(paste0("plot_", names(input)), plot(fit, 1, main = plot_title))
}
for (i in 1:length(predictors)) {
# apply your scatter function to the predictor variable
scatter(predictors[, i])
}
plot_population
get("plot_population")
scatter <- function(input) {
x <- unlist(input)
y <- df_com$ViolentCrimesPerPop
fit <- lm(y ~ x, data = df_com)
plot_title <- paste("Scatter Plot of", names(input), "vs. ViolentCrimesPerPop")
# save the plot in a variable with a dynamic name
assign(paste0("plot_", names(input)), plot(fit, 1, main = plot_title))
}
for (i in 1:length(predictors)) {
# apply your scatter function to the predictor variable
scatter(predictors[, i])
}
scatter <- function(input) {
x <- unlist(input)
y <- df_com$ViolentCrimesPerPop
fit <- lm(y ~ x, data = df_com)
plot_title <- paste("Scatter Plot of", names(input), "vs. ViolentCrimesPerPop")
# save the plot in a variable with a dynamic name
assign(paste0("plot_", names(input)), plot(fit, 1, main = plot_title))
}
for (i in 1:length(predictors)) {
# apply your scatter function to the predictor variable
scatter(predictors[, i])
}
scatter(predictors[,1])
scatter <- function(input) {
x <- unlist(input)
y <- df_com$ViolentCrimesPerPop
fit <- lm(y ~ x, data = df_com)
plot_title <- paste("Scatter Plot of", names(input), "vs. ViolentCrimesPerPop")
# save the plot in a variable with a dynamic name
assign(paste0("a", names(input)), plot(fit, 1, main = plot_title))
}
scatter(predictors[,1])
scatter(predictors[,2])
scatter(predictors[,3])
scatter(predictors[,4])
scatter(predictors[,5])
for (i in 1:length(predictors)) {
# apply your scatter function to the predictor variable
scatter(predictors[, i])
plot_names[[i]] <- paste0("plot_var", i)
}
plot_names <- list()
for (i in 1:length(predictors)) {
# apply your scatter function to the predictor variable
scatter(predictors[, i])
plot_names[[i]] <- paste0("plot_var", i)
}
plot_names[[1]]
scatter <- function(input) {
x <- unlist(input)
y <- df_com$ViolentCrimesPerPop
fit <- lm(y ~ x, data = df_com)
plot_title <- paste("Scatter Plot of", names(input), "vs. ViolentCrimesPerPop")
# save the plot in a variable with a dynamic name
assign(paste0("plot_var", names(input)), plot(fit, 1, main = plot_title))
}
plot_names <- list()
for (i in 1:length(predictors)) {
# apply your scatter function to the predictor variable
scatter(predictors[, i])
plot_names[[i]] <- paste0("plot_var", i)
}
plot_names[[1]]
plot_list[[1]]
scatter <- function(input) {
x <- unlist(input)
y <- df_com$ViolentCrimesPerPop
fit <- lm(y ~ x, data = df_com)
plot_title <- paste("Scatter Plot of", names(input), "vs. ViolentCrimesPerPop")
# save the plot in a variable with a dynamic name
assign(paste0("plot_var", names(input)), plot(fit, 1, main = plot_title))
}
scatter(predictors[,1])
scatter(predictors[,2])
scatter(predictors[,3])
scatter <- function(input, plot_names) {
x <- unlist(input)
y <- df_com$ViolentCrimesPerPop
fit <- lm(y ~ x, data = df_com)
plot_title <- paste("Scatter Plot of", names(input), "vs. ViolentCrimesPerPop")
# save the plot in a variable with a dynamic name
plot_names[[length(plot_names) + 1]] <- list(name = paste0("plot_", names(input)),
plot = plot(fit, 1, main = plot_title))
}
plot_list <- list()
for (i in 1:length(predictors)) {
scatter(predictors[, i], plot_list)
}
plot_list[[1]]$plot
plot_list[[1]]
plot_list[[1]]
plot_list[[1]]
plot_list[[2]]$plot
for (i in 1:length(predictors)) {
scatter(predictors[, i], plot_list())
}
for (i in 1:length(predictors)) {
scatter(predictors[, i], plot_list
}
scatter(predictors[, i], plot_list)
for (i in 1:length(predictors)) {
scatter(predictors[, i], plot_list)
}
plot_names
scatter <- function(input) {
x <- unlist(input)
y <- df_com$ViolentCrimesPerPop
fit <- lm(y ~ x, data = df_com)
plot_title <- paste("Scatter Plot of", names(input), "vs. ViolentCrimesPerPop")
# save the plot in a variable with a dynamic name
assign(paste0("plot_var", names(input)), plot(fit, 1, main = plot_title))
}
plot_names <- list()
for (i in 1:length(predictors)) {
# apply your scatter function to the predictor variable
scatter(predictors[, i])
plot_names[[i]] <- paste0("plot_var", i)
}
plot_names[[1]]
scatter <- function(input) {
x <- unlist(input)
y <- df_com$ViolentCrimesPerPop
fit <- lm(y ~ x, data = df_com)
plot_title <- paste("Scatter Plot of", names(input), "vs. ViolentCrimesPerPop")
# save the plot in a variable with a dynamic name
assign(paste0("plot_var", names(input)), plot(fit, 1, main = plot_title))
}
plot_names <- list()
for (i in 1:length(predictors)) {
# apply your scatter function to the predictor variable
scatter(predictors[, i])
}
scatter <- function(input) {
x <- unlist(input)
y <- df_com$ViolentCrimesPerPop
fit <- lm(y ~ x, data = df_com)
plot_title <- paste("Scatter Plot of", names(input), "vs. ViolentCrimesPerPop")
assign(paste0("plot_var", names(input)), plot(fit, 1, main = plot_title))
}
# Check for linearity with residuals vs fitted values
for (i in 1:length(predictors)) {
scatter(predictors[, i])
}
predictors <- df_com[,4:20]
scatter <- function(input) {
x <- unlist(input)
y <- df_com$ViolentCrimesPerPop
fit <- lm(y ~ x, data = df_com)
plot_title <- paste("Scatter Plot of", names(input), "vs. ViolentCrimesPerPop")
assign(paste0("plot_var", names(input)), plot(fit, 1, main = plot_title))
}
# Check for linearity with residuals vs fitted values
for (i in 1:length(predictors)) {
scatter(predictors[, i])
}
predictors <- df_com[,4:20]
scatter <- function(input) {
x <- unlist(input)
y <- df_com$ViolentCrimesPerPop
fit <- lm(y ~ x, data = df_com)
plot_title <- paste("Scatter Plot of", names(input), "vs. ViolentCrimesPerPop")
assign(paste0("plot_var", names(input)), plot(fit, 1, main = plot_title))
}
# Check for linearity with residuals vs fitted values
for (i in 1:length(predictors)) {
scatter(predictors[, i])
}
```{r warning=FALSE, fig.keep="all", message=FALSE}
predictors <- df_com[,4:20]
scatter <- function(input) {
x <- unlist(input)
y <- df_com$ViolentCrimesPerPop
fit <- lm(y ~ x, data = df_com)
plot_title <- paste("Scatter Plot of", names(input), "vs. ViolentCrimesPerPop")
assign(paste0("plot_var", names(input)), plot(fit, 1, main = plot_title))
}
# Check for linearity with residuals vs fitted values
for (i in 1:length(predictors)) {
scatter(predictors[, i])
}
predictors <- df_com[,4:20]
scatter <- function(input) {
x <- unlist(input)
y <- df_com$ViolentCrimesPerPop
fit <- lm(y ~ x, data = df_com)
plot_title <- paste("Scatter Plot of", names(input), "vs. ViolentCrimesPerPop")
assign(paste0("plot_var", names(input)), plot(fit, 1, main = plot_title))
}
# Check for linearity with residuals vs fitted values
for (i in 1:length(predictors)) {
scatter(predictors[, i])
}
predictors <- df_com[,4:20]
scatter <- function(input) {
x <- unlist(input)
y <- df_com$ViolentCrimesPerPop
fit <- lm(y ~ x, data = df_com)
plot_title <- paste("Scatter Plot of", names(input), "vs. ViolentCrimesPerPop")
assign(paste0("plot_var", names(input)), plot(fit, 1, main = plot_title))
}
# Check for linearity with residuals vs fitted values
for (i in 1:length(predictors)) {
scatter(predictors[, i])
}
scatter <- function(input) {
x <- unlist(input)
y <- df_com$ViolentCrimesPerPop
fit <- lm(y ~ x, data = df_com)
plot_title <- paste("Scatter Plot of", names(input), "vs. ViolentCrimesPerPop")
plot(fit, 1, main = plot_title)
}
for (i in 1:length(predictors)) {
plot_name <- paste("Scatter Plot of", names(predictors)[i], "vs. ViolentCrimesPerPop")
plot_html <- paste0("<div class='plotdiv'>",
"<h3>", plot_name, "</h3>",
"<div>", scatter(predictors[, i]), "</div>",
"<button onclick='",
"var next_div = document.getElementById(\"plot_", i+1, "\");",
"if (next_div) {",
"next_div.style.display = \"block\";",
"document.getElementById(\"plot_", i, "\").style.display = \"none\"; };",
"'>Next Plot</button>",
"</div>")
cat(plot_html)
}
predictors <- df_com[,4:20]
# Title {.tabset .tabset-fade}
scatter <- function(input) {
x <- unlist(input)
y <- df_com$ViolentCrimesPerPop
fit <- lm(y ~ x, data = df_com)
plot_title <- paste("Scatter Plot of", names(input), "vs. ViolentCrimesPerPop")
assign(paste0("plot_var", names(input)), plot(fit, 1, main = plot_title))
}
# Check for linearity with residuals vs fitted values
for (i in 1:length(predictors)) {
scatter(predictors[, i])
}
scatter <- function(input) {
x <- unlist(input)
y <- df_com$ViolentCrimesPerPop
fit <- lm(y ~ x, data = df_com)
plot_title <- paste("Scatter Plot of", names(input), "vs. ViolentCrimesPerPop")
plot(fit, 1, main = plot_title)
}
for (i in 1:length(predictors)) {
if (i == 1) {
cat("\n\n")
} else {
cat("  \n\n")
}
plot_name <- paste("Scatter Plot of", names(predictors)[i], "vs. ViolentCrimesPerPop")
cat("###", plot_name, "\n\n")
scatter(predictors[, i])
cat("\n\n")
if (i < length(predictors)) {
cat("[Next Plot](#plot", i+1, ")")
}
}
predictors <- df_com[,4:20]
scatter <- function(input) {
x <- unlist(input)
y <- df_com$ViolentCrimesPerPop
fit <- lm(y ~ x, data = df_com)
plot_title <- paste("Scatter Plot of", names(input), "vs. ViolentCrimesPerPop")
plot(fit, 1, main = plot_title)
}
for (i in 1:length(predictors)) {
plot_name <- paste("Scatter Plot of", names(predictors)[i], "vs. ViolentCrimesPerPop")
cat("\n\n")
cat("#### ", plot_name, "\n\n")
scatter(predictors[, i])
if (i < length(predictors)) {
cat("\n\n[Next Plot](#plot", i+1, ")\n\n")
}
}
predictors <- df_com[,4:20]
scatter <- function(input) {
x <- unlist(input)
y <- df_com$ViolentCrimesPerPop
fit <- lm(y ~ x, data = df_com)
plot_title <- paste("Scatter Plot of", names(input), "vs. ViolentCrimesPerPop")
plot(fit, 1, main = plot_title)
}
for (i in 1:length(predictors)) {
plot_name <- paste("Scatter Plot of", names(predictors)[i], "vs. ViolentCrimesPerPop")
cat("\n\n")
cat("#### ", plot_name, "\n\n")
scatter(predictors[, i])
if (i < length(predictors)) {
cat("\n\n[Next Plot](#plot", i+1, ")\n\n")
}
}
install.packages("flexdashboard")
install.packages("viridis")
install.packages("marmap")
install.packages("mapproj")
ggplot(data = df_com, aes(x = ViolentCrimesPerPop)) + geom_density()
library(ggparcoord)
install.packages("ggparcoord")
library(ggparcoord)
install.packages("GGally")
library(GGally)
ggparcoord(my_data, columns = c("crime_rate","population", "racepctblack", "racePctWhite", "racePctAsian", "racePctHisp", "agePct12t21", "agePct12t29", "agePct16t24", "agePct65up", "medIncome", "PctPopUnderPov", "PctNotHSGrad", "PctUnemployed", "TotalPctDiv", "PctKidsBornNeverMar", "RentMedian", "PctForeignBorn")),
ggparcoord(df_com, columns = c("crime_rate","population", "racepctblack", "racePctWhite", "racePctAsian", "racePctHisp", "agePct12t21", "agePct12t29", "agePct16t24", "agePct65up", "medIncome", "PctPopUnderPov", "PctNotHSGrad", "PctUnemployed", "TotalPctDiv", "PctKidsBornNeverMar", "RentMedian", "PctForeignBorn")),
ggparcoord
ggparcoord(df_com, columns = c("crime_rate","population", "racepctblack", "racePctWhite", "racePctAsian", "racePctHisp", "agePct12t21", "agePct12t29", "agePct16t24", "agePct65up", "medIncome", "PctPopUnderPov", "PctNotHSGrad", "PctUnemployed", "TotalPctDiv", "PctKidsBornNeverMar", "RentMedian", "PctForeignBorn")), scale = "uniminmax")
ggparcoord(df_com, columns = c("crime_rate","population", "racepctblack", "racePctWhite", "racePctAsian", "racePctHisp", "agePct12t21", "agePct12t29", "agePct16t24", "agePct65up", "medIncome", "PctPopUnderPov", "PctNotHSGrad", "PctUnemployed", "TotalPctDiv", "PctKidsBornNeverMar", "RentMedian", "PctForeignBorn"), scale = "uniminmax")
ggparcoord(df_com, columns = c("crime_rate","population", "racepctblack", "racePctWhite", "racePctAsian", "racePctHisp", "agePct12t21", "agePct12t29", "agePct16t24", "agePct65up", "medIncome", "PctPopUnderPov", "PctNotHSGrad", "PctUnemployed", "TotalPctDiv", "PctKidsBornNeverMar", "RentMedian", "PctForeignBorn"), scale = "uniminmax")
ggparcoord(df_com, columns = c("crime_rate","population", "racepctblack", "racePctWhite", "racePctAsian", "racePctHisp", "agePct12t21", "agePct12t29", "agePct16t24", "agePct65up", "medIncome", "PctPopUnderPov", "PctNotHSGrad", "PctUnemployed", "TotalPctDiv", "Pct
names(df_com)
df_box <- df_com[, c("racepctblack", "racePctWhite", "racePctAsian", "racePctHisp", "ViolentCrimesPerPop")]
# Reshape the data for plotting
df_box_melt <- melt(df_box, id.vars = "ViolentCrimesPerPop", variable.name = "Race")
melt
install.packages("reshape2")
library(reshape2)
df_box <- df_com[, c("racepctblack", "racePctWhite", "racePctAsian", "racePctHisp", "ViolentCrimesPerPop")]
# Reshape the data for plotting
df_box_melt <- melt(df_box, id.vars = "ViolentCrimesPerPop", variable.name = "Race")
# Create the boxplot
ggplot(df_box_melt, aes(x = Race, y = value, fill = Race)) +
geom_boxplot() +
xlab("") +
ylab("Percentage") +
ggtitle("Boxplot of Race Percentages and Violent Crimes") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(df_box_melt, aes(x = Race, y = ViolentCrimesPerPop, fill = Race)) +
geom_boxplot() +
xlab("") +
ylab("Percentage") +
ggtitle("Boxplot of Race Percentages and Violent Crimes") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(df_box, aes(y = ViolentCrimesPerPop, fill = Race)) +
geom_boxplot() +
xlab("") + ggtitle("Boxplot of Race Percentages and Violent Crimes")
df_box <- df_com[, c("racepctblack", "racePctWhite", "racePctAsian", "racePctHisp", "ViolentCrimesPerPop")]
df_box_melt <- melt(df_box, id.vars = "ViolentCrimesPerPop", variable.name = "Race")
ggplot(df_box, aes(y = ViolentCrimesPerPop, fill = Race)) +
geom_boxplot() +
xlab("") + ggtitle("Boxplot of Race Percentages and Violent Crimes")
df_box_melt
head(df_box_melt)
ggplot(df_box, aes(x = value, y = ViolentCrimesPerPop, fill = Race)) +
geom_boxplot() +
xlab("") + ggtitle("Boxplot of Race Percentages and Violent Crimes")
ggplot(df_box, aes(x = value, y = ViolentCrimesPerPop, fill = Race)) +
geom_boxplot() +
xlab("") + ggtitle("Boxplot of Race Percentages and Violent Crimes") df_box <- df_com[, c("racepctblack", "racePctWhite", "racePctAsian", "racePctHisp", "ViolentCrimesPerPop")]
df_box_melt
head(df_box_melt)
df_box <- df_com[, c("racepctblack", "racePctWhite", "racePctAsian", "racePctHisp", "ViolentCrimesPerPop")]
df_box_melt <- melt(df_box, id.vars = "ViolentCrimesPerPop", variable.name = "Race")
ggplot(df_box_melt, aes(x = value, y = ViolentCrimesPerPop, fill = Race)) +
geom_boxplot()
ggplot(df_box_melt, aes(x = value, y = ViolentCrimesPerPop)) +
geom_boxplot() + facet_wrap(~ Race)
ggplot(df_box_melt, aes(x = value)) +
geom_boxplot() + facet_wrap(~ Race)
ggplot(df_box_melt, aes(y = value)) +
geom_boxplot() + facet_wrap(~ Race)
ggplot(df_box_melt, aes(y = value, fill = Race)) +
geom_boxplot()
ggplot(df_box_melt, aes(y = value, fill = Race)) +
geom_boxplot() + ylab("text")
